////////////////////////////////////////////////////////////////////////////////
// ### CUSTOMIZABLE VARIABLES
////////////////////////////////////////////////////////////////////////////////
// Length factor: The length will be 49 x LENGTH_UNITS
LENGTH_UNITS = 3;
// Width factor: The width will be 49 x WIDTH_UNITS
WIDTH_UNITS = 3;

module __Customizer_Limit__() {}


////////////////////////////////////////////////////////////////////////////////
// ### OPENSCAD SPECIAL VARIABLES
////////////////////////////////////////////////////////////////////////////////
$fn = 24;


////////////////////////////////////////////////////////////////////////////////
// ### GLOBAL VARIABLES
////////////////////////////////////////////////////////////////////////////////
include <includes/Store Hero Variables.scad>


////////////////////////////////////////////////////////////////////////////////
// ### UTILITY MODULES
////////////////////////////////////////////////////////////////////////////////
include <includes/Store Hero Utilities.scad>


////////////////////////////////////////////////////////////////////////////////
// ### CALCULATION FUNCTIONS
////////////////////////////////////////////////////////////////////////////////
include <includes/Store Hero Calculations.scad>


////////////////////////////////////////////////////////////////////////////////
// ### MAIN RENDERING
////////////////////////////////////////////////////////////////////////////////
main();


////////////////////////////////////////////////////////////////////////////////
// ### MODULES
////////////////////////////////////////////////////////////////////////////////
module main() {
    grid();
}

module grid() {
    for (i = [0 : LENGTH_UNITS - 1]) {
        for (j = [0 : WIDTH_UNITS - 1]) {
            translate([i * BASE_SIZE, j * BASE_SIZE, 0])
                grid_cell();
        }
    }
}

module grid_cell() {
    difference() {
        cube([BASE_SIZE, BASE_SIZE, GRID_FLOOR_THICKNESS + GRID_WALL_HEIGHT]);
        translate([GRID_WALL_THICKNESS, GRID_WALL_THICKNESS, GRID_FLOOR_THICKNESS])
            cube([length_grid_cell(), width_grid_cell(), GRID_WALL_HEIGHT]);
        translate([grid_cell_hole_inset(), grid_cell_hole_inset(), 0])
            rounded_cube([GRID_HOLE_SIZE, GRID_HOLE_SIZE, GRID_FLOOR_THICKNESS], GRID_HOLE_ROUNDING_RADIUS);
    }
}